//
// Created by Carl on 2018/6/15.
//

#ifndef NEWKERNEL_VGA_H
#define NEWKERNEL_VGA_H


//  name	                            port	index	3h      12h     13h     X
//  Mode_Control	                    0x3C0	0x10	0x0C	0x01	0x41	0x41
//  Overscan_Register	                0x3C0	0x11	0x00	0x00	0x00	0x00
//  Color_Plane_Enable	                0x3C0	0x12	0x0F	0x0F	0x0F	0x0F
//  Horizontal_Panning	                0x3C0	0x13	0x08	0x00	0x00	0x00
//  Color_Select	                    0x3C0	0x14	0x00	0x00	0x00	0x00
//  Miscellaneous_Output_Register       0x3C2	N/A	    0x67	0xE3	0x63	0xE3
//  Clock_Mode_Register	                0x3C4	0x01	0x00	0x01	0x01	0x01
//  Character_select	                0x3C4	0x03	0x00	0x00	0x00	0x00
//  Memory_Mode_Register	            0x3C4	0x04	0x07	0x02	0x0E	0x06
//  Mode_Register	                    0x3CE	0x05	0x10	0x00	0x40	0x40
//  Miscellaneous_Register	            0x3CE	0x06	0x0E	0x05	0x05	0x05
//  Horizontal_Total	                0x3D4	0x00	0x5F	0x5F	0x5F	0x5F
//  Horizontal_Display_Enable_End	    0x3D4	0x01	0x4F	0x4F	0x4F	0x4F
//  Horizontal_Blank_Start	            0x3D4	0x02	0x50	0x50	0x50	0x50
//  Horizontal_Blank_End	            0x3D4	0x03	0x82	0x82	0x82	0x82
//  Horizontal_Retrace_Start	        0x3D4	0x04	0x55	0x54	0x54	0x54
//  Horizontal_Retrace_End	            0x3D4	0x05	0x81	0x80	0x80	0x80
//  Vertical_Total	                    0x3D4	0x06	0xBF	0x0B	0xBF	0x0D
//  Overflow_Register	                0x3D4	0x07	0x1F	0x3E	0x1F	0x3E
//  Preset_row_scan	                    0x3D4	0x08	0x00	0x00	0x00	0x00
//  Maximum_Scan_Line	                0x3D4	0x09	0x4F	0x40	0x41	0x41
//  Vertical_Retrace_Start	            0x3D4	0x10	0x9C	0xEA	0x9C	0xEA
//  Vertical_Retrace_End	            0x3D4	0x11	0x8E	0x8C	0x8E	0xAC
//  Vertical_Display_Enable_End	        0x3D4	0x12	0x8F	0xDF	0x8F	0xDF
//  Logical_Width	                    0x3D4	0x13	0x28	0x28	0x28	0x28
//  Underline_Location	                0x3D4	0x14	0x1F	0x00	0x40	0x00
//  Vertical_Blank_Start	            0x3D4	0x15	0x96	0xE7	0x96	0xE7
//  Vertical_Blank_End	                0x3D4	0x16	0xB9	0x04	0xB9	0x06
//  Mode_Control	                    0x3D4	0x17	0xA3	0xE3	0xA3	0xE3

#include <type.h>

#define PORT_VGA_INDEX_DATA 0x3c0
#define PORT_VGA_MOR 0x3c2
void vga_draw_rect(int color, int x, int y, int w, int h);
void vga_draw_string(char* str,int color,int x,int y);
void vga_update_screen();
void init_vga();
int get_screen_size(int* w,int* h);

#endif //NEWKERNEL_VGA_H
